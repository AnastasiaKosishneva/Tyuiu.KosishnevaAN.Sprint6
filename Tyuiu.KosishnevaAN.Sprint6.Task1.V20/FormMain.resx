<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_KAN.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWoAAAAxCAYAAADz5uNjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAF35JREFUeF7t3VWM5EYXBeB9ymOUKA+Bl0SKgkqiRIrCnCikMDMzMzMzMzMzMzMz
        MzMz1a+vNPXL42mcds/09NaRrN3ttt12wbmnzr32jgsZGRkZGT2NTNQZGRkZPY5M1BkZGRk9jkzUfYrf
        f/89vP766+G6664Lxx9/fNzuuOOO8PHHH4d//vlnYK/u4d9//w2//PJLeOmll8KVV14ZTjjhhHDSSSeF
        m2++OXz55Zfhr7/+GtgzIyOjGTJR9yEQ8csvvxyuuOKKsP/++4cNNtggrLbaamGbbbYJN9xwQ/j2228H
        9uwekPQrr7wSzj///LDPPvvEa1h11VXDFltsEW699dbwzTffhP/++29g74yMjEbIRN1nQH7U9Lnnnhsu
        vPDC8Nprr4U//vgjvPHGG2HjjTcO++67b3jxxRcH9u4eKPerr746nHPOOeGDDz4Iv/32W3jsscfCdttt
        F3beeeeo9kdC2Wdk9AMyUfchkDVFa2MxsCF+/vnncOSRR4bDDjssPPLIIwN7dg9I+Ndff43X4O+u6c03
        3wwnnnhiOOigg8K7776bFXVGRovIRD0eIPnFRxxxRDj22GPDs88+O/BNCO+//35UvQcffHC49957w59/
        /hleffXVcMEFF4SLL764EotCsPjoo4/C7bffHk4++eTw5JNPhp9++mng24yMjGbIRD0eAFG+9dZb4dBD
        D43k++mnn0byRcqPP/54OOWUU8Iee+wRifydd94Jd911V7jsssvCPffcEwl1uET9999/RwvktNNOi3bH
        brvtFs4444zw9ddfZ9sjI6MNZKLucyDEr776KlZeIMknnngiEjfy5WW/8MILUeH6XqLv2muvjcqar0yJ
        I1vEfv/994ebbrqp7iZByIOmwBMJCwS88R122CGstNJK0SNnv1DsPOuMjIzWkIm6j4GMv//++0igFPNT
        Tz0VfeMy2CJK99ZYY43oH1PfiWx9p6Ru4YUXDlNMMUXdbeqpp46VJRS6AFCE61BpouJk/fXXj/bHJ598
        MvBtRkZGM2Si7mMg2YceeiiWx0kgIu1aNgaF/eijj0blm0rnEuxP/VLllHW97bPPPovHUdG1foM6//DD
        D6OlwgahqrP9kZHRGrpC1CYlb9Ny+fLLLw/33XdfXEK3ix9//DEu1VUKIBJE4NwZzaGdnn766Vii56EX
        irYeMX7++efhmmuuCZtvvnlMIvp3N+BBl1tuuSXssssumaiHAfPBA0TXX3/9oGCaMbJQQYWXPKdgtVlP
        nDTCF198EXNBp556auxT52yEQUSNXB9++OFIjAcccEDDDQGYbGVQX5bOKgnOPvvs6HnyQYczKS3T1QFf
        euml8XzUmBpgdcEZjUG9anttJqGHuCnst99+O24JP/zwQ7RELrroonDUUUeF/fbbLzzzzDPxeCp5uKDA
        jaXnn38+EozBrC8NTOOLB97u4B4foGzxkksuqTnnJGO33Xbb2Iad9E0/gxgw7glE477KMWbl6Zz46Kyz
        zop5HYRNhLb7O999910UUubd6aefHglf39cTooOImupSFbDEEkuECSecMEwzzTRhkUUWCcsuu2zclllm
        mbDooouGKaecMiaHqKMikLQn4niQW2+9dWwwXmQnjeXC3RRVaAkvIZbVWH1oawOHH6y9PJmYEn4GxZln
        nhn9aINOhccDDzwQ+/Huu++OScRNNtkknHfeeXE1JOAOF++9914Mrh4d9+CL36DWDznkkGjHCBBjFQSN
        mnBb1UlRKmvJJZcM48aNq7nJB+gfhJQxFIhz7bXXjvmW5557rjKiJg6NaQS94447RqHq352c3zy1ehV4
        zVMBwL9rnXOI9cFvNJlnmWWWGMVN5gQnpoQ8irznnnvGiJDg5JSa9zkstdRS4c4774wEWxUQ84033hif
        rKPIBJVsgwyFNkEkRx99dJh//vmHJP022mij8OCDD0a/WiSXPGRNOQYx61vKzWedrFyshgTtvffeOyyw
        wAJhzjnnDJtuumkkbMnGqibQaMB9aTeb+VAlEPVyyy0XJppoojD55JMP6b/ZZpstqsVsfdSGWn0ikUhR
        u1/FOHMOSho5zzfffNHyYF1UhTQXd91112hB1rJSahK1utcZZpghRu6iX+lgXgrFTB1ZHidYVhtA22+/
        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
</value>
  </data>
</root>